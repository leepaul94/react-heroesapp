{"version":3,"sources":["assets/heroes sync /^/.*$","assets/heroes/dc-arrow.jpg","assets/heroes/dc-batman.jpg","assets/heroes/dc-black.jpg","assets/heroes/dc-blue.jpg","assets/heroes/dc-flash.jpg","assets/heroes/dc-green.jpg","assets/heroes/dc-martian.jpg","assets/heroes/dc-robin.jpg","assets/heroes/dc-superman.jpg","assets/heroes/dc-wonder.jpg","assets/heroes/marvel-captain.jpg","assets/heroes/marvel-cyclops.jpg","assets/heroes/marvel-daredevil.jpg","assets/heroes/marvel-hawkeye.jpg","assets/heroes/marvel-hulk.jpg","assets/heroes/marvel-iron.jpg","assets/heroes/marvel-silver.jpg","assets/heroes/marvel-spider.jpg","assets/heroes/marvel-thor.jpg","assets/heroes/marvel-wolverine.jpg","auth/AuthContext.js","routers/PrivateRoute.js","routers/PublicRoute.js","types/types.js","components/login/LoginScreen.js","data/heroes.js","helpers/heroImages.js","components/hero/HeroCard.js","components/hero/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/hero/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","components/hooks/useForm.js","selectors/getHeroesByName.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AuthContext","createContext","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","type","payload","name","replace","heroes","heroImages","require","HeroCard","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","default","alt","HeroList","publisher","useMemo","includes","filter","hero","getHeroesByPublisher","DcScreen","HeroScreen","heroId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","preventDefault","placeholder","autoComplete","onChange","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38519dcf.chunk.js","sourcesContent":["var map = {\n\t\"./dc-arrow.jpg\": 35,\n\t\"./dc-batman.jpg\": 36,\n\t\"./dc-black.jpg\": 37,\n\t\"./dc-blue.jpg\": 38,\n\t\"./dc-flash.jpg\": 39,\n\t\"./dc-green.jpg\": 40,\n\t\"./dc-martian.jpg\": 41,\n\t\"./dc-robin.jpg\": 42,\n\t\"./dc-superman.jpg\": 43,\n\t\"./dc-wonder.jpg\": 44,\n\t\"./marvel-captain.jpg\": 45,\n\t\"./marvel-cyclops.jpg\": 46,\n\t\"./marvel-daredevil.jpg\": 47,\n\t\"./marvel-hawkeye.jpg\": 48,\n\t\"./marvel-hulk.jpg\": 49,\n\t\"./marvel-iron.jpg\": 50,\n\t\"./marvel-silver.jpg\": 51,\n\t\"./marvel-spider.jpg\": 52,\n\t\"./marvel-thor.jpg\": 53,\n\t\"./marvel-wolverine.jpg\": 54\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","export default __webpack_public_path__ + \"static/media/dc-arrow.15b27bc2.jpg\";","export default __webpack_public_path__ + \"static/media/dc-batman.ab9eadc3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-black.3747c663.jpg\";","export default __webpack_public_path__ + \"static/media/dc-blue.cc8169a3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-flash.b3922f25.jpg\";","export default __webpack_public_path__ + \"static/media/dc-green.01c54ee1.jpg\";","export default __webpack_public_path__ + \"static/media/dc-martian.78565f7d.jpg\";","export default __webpack_public_path__ + \"static/media/dc-robin.ea4afe99.jpg\";","export default __webpack_public_path__ + \"static/media/dc-superman.e9391474.jpg\";","export default __webpack_public_path__ + \"static/media/dc-wonder.970ba2d6.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-captain.d2c7774d.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-cyclops.f1442408.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-daredevil.2f4f1a57.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hawkeye.1f78e874.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hulk.d1af5fe5.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-iron.b394df11.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-silver.1d43a08b.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-spider.054016b4.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-thor.c63e651c.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-wolverine.ee676488.jpg\";","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated, // me fijo si es true o false\r\n    component: Component, // lo renombro con mayuscula para que haya coherencia con las otras componentes porque es una componente\r\n    ...rest // el resto de las props que recibo\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname); // para que me guarde en el localstorage mi ultimo pathname o ruta. Asi luego puedo evaluarlo en el login haber si esta o no para para cuando me loggee de nuevo vuelva a la ruta donde lo deje.\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? ( <Component {...props} /> ) // si es true, en component={<Component y sus props} history, los demas\r\n                    : ( <Redirect to=\"/login\" /> ) // caso contrario, me mando al la ruta del login de nuevo\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated, \r\n    component: Component, // lo renombro con mayuscula para que haya coherencia con las otras componentes porque es una componente\r\n    ...rest // el resto de las props que recibo\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            ( !isAuthenticated )\r\n                ? ( <Component {...props} /> ) // si es true, en component={<Component y sus props} history, los demas\r\n                : ( <Redirect to=\"/\" /> ) // caso contrario, me mando al la ruta del login de nuevo\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout:'[auth] logout'\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { AuthContext } from \"../../auth/AuthContext\";\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({ history }) => { // history es un objeto dentro de las props que vienen por defecto por react router dom\r\n\r\n    const { dispatch } = useContext(AuthContext); // uso el usecontext para usar el dispatch llamando al authcontext\r\n\r\n    const handleLogin = () => {\r\n        // history.push('/'); // me redirige a la ruta que tenga unicamente el '/' es decir a marvel\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/'; // obtengo mi ultimo logout antes de salirme de login, pero si es la primera vez, obtengo la ruta del dashboard.\r\n\r\n        dispatch({ // envio a mi reducer mi action\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Paul'\r\n            }\r\n        });\r\n\r\n        history.replace( lastPath ); // Con history.replace() lo que se hace es reemplazar en la history que no se visitó el Login sino que ahora directamente va al \"/\" si es la primera vez o al ultimo path.\r\n\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","\r\nexport const heroImages = require.context('../assets/heroes', true ); // es del webpack con esto puedo extraer las imagenes poniendo el directorio y que se fije en los subdirectorios\r\n// el directorio es relativo a donde se encuentre el archivo por eso es un poco diferente a cuando lo ecribi en HeroScreen o HeroCard","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { heroImages } from '../../helpers/heroImages'; // lo mismo al comment de abajo solo que ahora lo estoy importando de helpers/heroImages\r\n\r\n// const heroImages = require.context('../../assets/heroes', true ); // es del webpack con esto puedo extraer las imagenes poniendo el directorio y que se fije en los subdirectorios\r\n\r\nexport const HeroCard = ({ \r\n    id,\r\n    superhero, \r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={ { maxWidth: 540 } }> {/* Con style le doy estilo como css y adentro le pongo lo que quiero hacer sin los - como en css */}\r\n            <div className=\"row no gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={ heroImages(`./${ id }.jpg`).default } className=\"card-img\" alt={ superhero } /> {/* el source es estatico no es un api, solo cambia el id y le concateno .jpg*/}\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"> { superhero }</h5>\r\n                        <p className=\"card-text\"> { alter_ego } </p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                                && <p className=\"card-text\"> { characters } </p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\"> { first_appearance } </small>\r\n                        </p>\r\n\r\n                        <Link to={ `./hero/${ id }` }>\r\n                            More...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n    \r\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [publisher]);\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map( hero => (\r\n                    <HeroCard \r\n                        key={ hero.id }\r\n                        { ...hero } /* estoy diciendo que extraiga todas las propiedades de hero y lo pase a HeroCard como props */\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n    \r\n    const validPublishers = ['DC Comics', 'Marvel Comics']; \r\n\r\n    if( !validPublishers.includes( publisher ) ) {\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher );\r\n\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../hero/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher=\"DC Comics\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router'\r\nimport { heroImages } from '../../helpers/heroImages'; // estoy importando las imagenes de helpers \r\nimport { getHeroesById } from '../../selectors/getHeroById';\r\n\r\n// import batman from '../../assets/heroes/dc-batman.jpg'; // estatica\r\n// const heroImages = require.context('../../assets/heroes', true ); // es del webpack con esto puedo extraer las imagenes poniendo el directorio y que se fije en los subdirectorios\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    const { heroId } = useParams(); // extraigo del url el id del heroe ya que la ruta esta compuesta por el id al final del url\r\n    \r\n    const hero = useMemo(() => getHeroesById( heroId ), [heroId]); // obtengo el heroe que coincida con mi id que extraje del url\r\n\r\n    if( !hero ) {\r\n        return <Redirect to=\"/\" />; // Me redirige a la pag principal si el url escrito no sea el correcto o no se encuentre.\r\n    }\r\n\r\n    const handleReturn = () => {\r\n\r\n        if( history.length <= 2 ) { // si yo me dirigi directamente a un heroe sin hacer todo el trazado desde la pag principal,\r\n            history.push('/'); // me dirige al tocar return a la pag principal\r\n        } else {\r\n            history.goBack(); // me dirige a la pag anterior si mi trazado hasta el hero es mayor a 2\r\n        }\r\n    };\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    // src={ `../assets/heroes/${ heroId }.jpg` } // desde public/assets\r\n                    // src={ batman } // import\r\n                    src={ heroImages(`./${ heroId }.jpg`).default } // hay que agregar la prop default porque sino no sale\r\n                    alt={ superhero }\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3> { superhero } </h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b> Alter ego: </b> { alter_ego } </li>\r\n                    <li className=\"list-group-item\"> <b> Publisher: </b> { publisher } </li>\r\n                    <li className=\"list-group-item\"> <b> First appearance: </b> { first_appearance } </li>\r\n                </ul>\r\n\r\n                <h5> Characters </h5>\r\n                <p> { characters } </p>\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = ( id ) => {\r\n\r\n    return heroes.find( hero => hero.id === id ); // me devuelva apenas encuentre uno con el mismo id\r\n\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../hero/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher=\"Marvel Comics\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { HeroCard } from '../hero/HeroCard';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { useLocation } from 'react-router';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation(); // me devuelve un objeto en donde en la prop search aparece lo que guarda el history.push\r\n    const { q = '' } = queryString.parse( location.search ); // obtengo la prop q del objeto convirtiendo el string del location.search en props y values y eso lo hace queryString que trabaja con los query\r\n    // lo igualo a un string vacio para que no me de error por undefined\r\n\r\n    \r\n    const [ formValues, handleInputChange ] = useForm({\r\n        searchText: q // lo que se busco, se lo pasa al useform como valor inicial. A su vez, si se hace refresh sigue estando porque lo esta leyendo del queryString\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n    \r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q] ); // me realiza el filtro solo cuando cambia el q es decir el query. Si no cambia, se queda memorizada mis valores\r\n\r\n    const handleSearch = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`?q=${ searchText }`); // es para que en la url me aparezca /search?q=batman\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={ handleSearch }>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={ searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4> Results </h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                            && \r\n                            <div className=\"alert alert-info\">\r\n                                Search a hero\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                            && \r\n                            <div className=\"alert alert-danger\">\r\n                                There is not a hero with the name { q }\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroCard \r\n                                key={ hero.id }\r\n                                { ...hero }    \r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        \r\n        setValues({\r\n\r\n            ...values,\r\n            [target.name]: target.value \r\n\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { heroes } from \"../data/heroes\"\r\n\r\n\r\nexport const getHeroesByName = ( name = '' ) => {\r\n\r\n    if( name === '') {\r\n        return [];\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    \r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name ) );\r\n}","import React, { useContext } from 'react'\r\nimport { Link, NavLink , useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { user:{ name }, dispatch } = useContext( AuthContext );\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        \r\n        history.replace('/login');\r\n\r\n        dispatch({\r\n            type: types.logout\r\n        })\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        { name }\r\n                    </span>\r\n\r\n                    <button \r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/hero/HeroScreen'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n                    <Route exact path=\"/hero/:heroId\" component={ HeroScreen } />\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>    \r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext); // para obtener el user y pasarlo al privateroute\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ user.logged } \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={ DashboardRoutes } \r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// const state = {\r\n//     name: 'Paul',\r\n//     logged: true\r\n// }\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            };\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\n\r\nconst init = () => { // para leer el localStorage\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false }; // Lo que retorna es si  tenemos dicho obj en el LocalStorage con getItem('user'). Como es un obj le hago el parse con JSON.parse para volverlo un string. Si no existe retorno un obj con el logged: false.\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init) // init ayuda a computar todo ese estado inicial para que funcione mas rapido el componente y esa funcion no se ejecute todo el tiempo cuando haya algun cambio en el componente.\r\n    // El init se dispara y lo que retorne va a ser el inicialState\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}